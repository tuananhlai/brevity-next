{
  "React Component": {
    "prefix": "rco",
    "body": [
      "import styles from \"./${TM_FILENAME_BASE}.module.scss\";",
      "",
      "export interface ${TM_FILENAME_BASE}Props {",
      "  // Add component props.",
      "}",
      "",
      "export const ${TM_FILENAME_BASE}: React.FC<${TM_FILENAME_BASE}Props> = (props) => {",
      "  return <div />;",
      "};",
    ],
    "description": "React component without forwardRef",
  },
  "React ForwardRef Component": {
    "prefix": "rcof",
    "body": [
      "import { forwardRef } from \"react\";",
      "import styles from \"./${TM_FILENAME_BASE}.module.scss\";",
      "",
      "export interface ${TM_FILENAME_BASE}Props {",
      "  // Add component props.",
      "}",
      "",
      "const ${TM_FILENAME_BASE}: React.ForwardRefRenderFunction<HTMLElement, ${TM_FILENAME_BASE}Props> = (",
      "  props,",
      "  ref",
      ") => {",
      "  return <div />;",
      "};",
      "",
      "const _${TM_FILENAME_BASE} = /*#__PURE__*/ forwardRef(${TM_FILENAME_BASE});",
      "",
      "export { _${TM_FILENAME_BASE} as ${TM_FILENAME_BASE} };",
    ],
    "description": "React component using forwardRef",
  },
  "Create Context and Hook": {
    "prefix": "rctx",
    "body": [
      "import { createContext, useContext } from \"react\";",
      "",
      "export interface ${TM_FILENAME_BASE}Value {",
      "\t$1",
      "}",
      "",
      "export const ${TM_FILENAME_BASE} = createContext<${TM_FILENAME_BASE}Value | null>(",
      "\tnull,",
      ");",
      "",
      "export const use${TM_FILENAME_BASE} = (): ${TM_FILENAME_BASE}Value => {",
      "\tconst context = useContext(${TM_FILENAME_BASE});",
      "\tif (!context) {",
      "\t\tthrow new Error(\"use${TM_FILENAME_BASE} must be used within a ${TM_FILENAME_BASE}Provider\");",
      "\t}",
      "",
      "\treturn context;",
      "};",
    ],
    "description": "Creates a React context and a custom hook to consume it. The context name is the file name without extension.",
  },
}
