name: "Verify code quality"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  test:
    permissions:
      pull-requests: write
      checks: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          package-manager: pnpm
          test-script: pnpm run ci:test
          skip-step: install

  verify-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Lint code
        run: pnpm run lint
      - name: Verify code formatting
        run: pnpm run format:check
      - name: Check for dependency duplication
        run: pnpm dedupe --check

  # Vercel Authentication must be disabled for the job below. Otherwise,
  # requests sent to the Vercel Preview URL will failed with status code 401.
  lighthouse:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    # https://github.com/patrickedqvist/wait-for-vercel-preview/issues/66
    permissions:
      contents: read
      pull-requests: write
      deployments: read
    steps:
      # The checkout step is required so that Github Action
      # can extract the current commit hash.
      # https://github.com/treosh/lighthouse-ci-action/issues/21
      - uses: actions/checkout@v4
      - name: Waiting for 200 from the Vercel Preview
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.2
        id: waitFor200
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 180
          check_interval: 10
      - name: Run Lighthouse on urls and validate with lighthouserc
        uses: treosh/lighthouse-ci-action@v12
        id: lighthouse-ci-action
        with:
          urls: ${{ steps.waitFor200.outputs.url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
      - name: Generate lighthouse comment body
        id: generate-lighthouse-comment-body
        env:
          LINKS: ${{ steps.lighthouse-ci-action.outputs.links }}
          MANIFEST: ${{ steps.lighthouse-ci-action.outputs.manifest }}
        run: |
          echo "body<<EOF" >> $GITHUB_OUTPUT
          node internals/scripts/generate-lighthouse-comment-body.js >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: ${{ steps.generate-lighthouse-comment-body.outputs.body }}
